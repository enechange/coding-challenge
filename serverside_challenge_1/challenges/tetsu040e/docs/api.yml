openapi: "3.0.0"
info:
  title: "challenge API"
  description: ""
  version: "v0.0.1"
paths:
  "/plan/simurate":
    get:
      summary: "電気料金比較"
      description: "契約アンペア数(A)と1ヶ月の使用量(kWh)を受け取って、プランごとの電気料金を返します"
      parameters:
        - name: "ampere"
          in: "query"
          description: "契約アンペア数 (A) を 10 / 15 / 20 / 30 / 40 / 50 / 60 の中から選択する"
          required: true
          schema:
            type: "integer"
        - name: "amount"
          in: "query"
          description: "使用量 (kWh) を 0 以上の整数で指定する"
          required: true
          schema:
            type: "integer"
      responses:
        '200':
          description: "正常レスポンス"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "integer"
                  data:
                    type: "object"
                    properties:
                      plan_prices:
                        type: "array"
                        items:
                          $ref: '#/components/schemas/plan_price'
                  errors:
                    type: "null"
              example:
                status: 200
                data:
                  plan_prices:
                    -
                      plan_name: "プランA"
                      provider_name: "A電力"
                      price: 5000.0
                    -
                      plan_name: "プランB"
                      provider_name: "B電力"
                      price: 5500.0
                errors:
        '400':
          description: "パラメーターに誤りがある場合"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "integer"
                  data:
                    type: "null"
                  errors:
                    type: "array"
                    items:
                      $ref: '#/components/schemas/error'
              example:
                status: 400
                data:
                errors:
                  ampere:
                    - "契約アンペア数を選択してください"
                  amount:
                    - "使用料を入力してください"
        '500':
          description: "サーバーエラーが発生した場合"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "integer"
                  data:
                    type: "null"
                  errors:
                    type: "array"
                    items:
                      $ref: '#/components/schemas/error'
              example:
                status: 500
                data:
                errors:
                  errors:
                    - "internal server error"
components:
  schemas:
    plan_price:
      type: "object"
      properties:
        plan_name:
          type: "string"
          description: "プラン名"
        provider_name:
          type: "string"
          description: "電力会社名"
        price:
          type: "number"
          description: "金額"
    error:
      type: "object"
      description: "エラー詳細オブジェクト"
      properties:
        parameter_name:
          type: "array"
          description: "400エラーの場合はエラー対象のパラメータ名をキーに、対応するメッセージの配列を値としたオブジェクトを返し、500エラーの場合は\"errors\" をキーに、メッセージの配列を値としたオブジェクトを返す"
          items:
            type: "string"
