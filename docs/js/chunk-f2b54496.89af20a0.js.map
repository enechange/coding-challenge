{"version":3,"sources":["webpack:///./src/components/molecules/PlanForm.vue?8847","webpack:///./src/components/molecules/PlanForm.vue","webpack:///./src/components/molecules/PlanForm.vue?4428","webpack:///./src/components/molecules/PlanForm.vue?52d2","webpack:///./src/util/optionsUtil.ts"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","scopedSlots","_u","key","fn","_v","proxy","planOptions","length","explain","model","value","simulationData","callback","$$v","$set","expression","_s","_e","staticRenderFns","target","find","option","plan","setPlanOption","company","type","Object","PlanForm","components","BLabel","BSelect","BInfoMessage","component","getCompanyOptions","area","otherOption","OTHER","label","TOKYO","TOKYO_DENRYOKU","selected","KANSAI","KANSAI_DENRYOKU","getPlanOptions","PLAN_B","PLAN_C","PLAN_A","getAmpsOption","map","elm","index","Array","_"],"mappings":"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","file":"js/chunk-f2b54496.89af20a0.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-label',{attrs:{\"is-required\":true},scopedSlots:_vm._u([{key:\"label\",fn:function(){return [_vm._v(\"プラン\")]},proxy:true}])}),_c('b-select',{attrs:{\"disabled\":_vm.planOptions.length === 0,\"options\":_vm.planOptions,\"explain\":_vm.explain},model:{value:(_vm.simulationData.plan),callback:function ($$v) {_vm.$set(_vm.simulationData, \"plan\", $$v)},expression:\"simulationData.plan\"}}),(_vm.explain)?_c('b-info-message',{scopedSlots:_vm._u([{key:\"message\",fn:function(){return [_vm._v(_vm._s(_vm.explain))]},proxy:true}],null,false,634706748)}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue, Prop, Watch } from \"vue-property-decorator\";\nimport { ISimulation, SelectOption } from \"@/types\";\nimport { getPlanOptions } from \"@/util/optionsUtil\";\n\n@Component({\n  components: {\n    BLabel: () => import(\"@/components/atoms/BLabel.vue\"),\n    BSelect: () => import(\"@/components/atoms/BSelect.vue\"),\n    BInfoMessage: () => import(\"@/components/atoms/BInfoMessage.vue\"),\n  },\n})\nexport default class PlanForm extends Vue {\n  @Prop({ type: Object }) simulationData!: ISimulation;\n\n  planOptions: (SelectOption & { explain: string })[] = [];\n\n  get explain(): string | undefined {\n    const target = this.planOptions.find((option) => {\n      return option.value === this.simulationData.plan;\n    });\n    return target?.explain;\n  }\n\n  @Watch(\"simulationData.company\")\n  setPlanOption(): void {\n    this.planOptions = getPlanOptions(this.simulationData.company);\n  }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--14-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PlanForm.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--14-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PlanForm.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./PlanForm.vue?vue&type=template&id=de8fb866&\"\nimport script from \"./PlanForm.vue?vue&type=script&lang=ts&\"\nexport * from \"./PlanForm.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import {\n  areaTypes,\n  companyTypes,\n  planTypes,\n  ISimulation,\n  SelectOption,\n} from \"@/types\";\n\n// 電力会社の選択肢を生成\nexport function getCompanyOptions(area: areaTypes): SelectOption[] {\n  const otherOption: SelectOption = {\n    value: companyTypes.OTHER,\n    label: companyTypes.OTHER,\n  };\n  if (area === areaTypes.TOKYO) {\n    return [\n      {\n        value: companyTypes.TOKYO_DENRYOKU,\n        label: companyTypes.TOKYO_DENRYOKU,\n        selected: true,\n      },\n      otherOption,\n    ];\n  } else if (area === areaTypes.KANSAI) {\n    return [\n      {\n        value: companyTypes.KANSAI_DENRYOKU,\n        label: companyTypes.KANSAI_DENRYOKU,\n        selected: true,\n      },\n      otherOption,\n    ];\n  } else {\n    return [];\n  }\n}\n\n// プランの選択肢を生成\nexport function getPlanOptions(\n  company?: companyTypes\n): (SelectOption & { explain: string })[] {\n  if (company === companyTypes.TOKYO_DENRYOKU) {\n    return [\n      {\n        value: planTypes.PLAN_B,\n        label: planTypes.PLAN_B,\n        explain: `${planTypes.PLAN_B}の説明`,\n        selected: true,\n      },\n      {\n        value: planTypes.PLAN_C,\n        label: planTypes.PLAN_C,\n        explain: `${planTypes.PLAN_C}の説明`,\n      },\n    ];\n  } else if (company === companyTypes.KANSAI_DENRYOKU) {\n    return [\n      {\n        value: planTypes.PLAN_A,\n        label: planTypes.PLAN_A,\n        explain: `${planTypes.PLAN_A}の説明`,\n        selected: true,\n      },\n      {\n        value: planTypes.PLAN_B,\n        label: planTypes.PLAN_B,\n        explain: `${planTypes.PLAN_B}の説明`,\n      },\n    ];\n  } else {\n    return [];\n  }\n}\n\n// 契約容量の選択肢を生成\nexport function getAmpsOption(simulationData: ISimulation): SelectOption[] {\n  if (simulationData.company === companyTypes.TOKYO_DENRYOKU) {\n    if (simulationData.plan === planTypes.PLAN_B) {\n      return [\"10A\", \"15A\", \"20A\", \"30A\", \"40A\", \"50A\", \"60A\"].map(\n        (elm, index) => {\n          return {\n            value: elm,\n            label: elm,\n            selected: index === 0,\n          };\n        }\n      );\n    } else if (simulationData.plan === planTypes.PLAN_C) {\n      return [...Array(44)].map((_, index) => {\n        return {\n          value: `${index + 6}kVA`,\n          label: `${index + 6}kVA`,\n          selected: index === 0,\n        };\n      });\n    }\n  } else if (\n    simulationData.company === companyTypes.KANSAI_DENRYOKU &&\n    simulationData.plan === planTypes.PLAN_B\n  ) {\n    return [...Array(44)].map((_, index) => {\n      return {\n        value: `${index + 6}kVA`,\n        label: `${index + 6}kVA`,\n        selected: index === 0,\n      };\n    });\n  }\n  return [];\n}\n"],"sourceRoot":""}